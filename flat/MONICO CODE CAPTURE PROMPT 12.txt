(Python_3_13_2venv) C:\Users\MBUNDS\Documents\QtDesignStudio\AURORA>python tests/test_submit_prompt_demo.py
[SessionDriver] Launching ChatGPT browser session...
[BrowserController] Headless mode is OFF
[BrowserController] Launching Chrome browser...

DevTools listening on ws://127.0.0.1:61407/devtools/browser/4842fc13-82a9-4006-a9ad-be33f68f8700
[25756:21784:0414/111644.938:ERROR:registration_request.cc(291)] Registration response error message: DEPRECATED_ENDPOINT
Created TensorFlow Lite XNNPACK delegate for CPU.
Attempting to use a delegate that only supports static-sized tensors with a graph that has dynamic-sized tensors (tensor#-1 is a dynamic-sized tensor).
[BrowserController] Detected command chips — page fully loaded.
[BrowserController] UI ready after 4.98 seconds.
[SessionDriver] HTML captured. Initializing parser...
[SessionDriver] Initializing element mapper...
[ElementMapper] Registered elements: ['prompt_box', 'send_button', 'message_bubbles']
[SessionDriver] ElementMapper ready.
[SessionDriver] Submitting prompt: Aurora says hello again. Please write a complete Python script that loads a YAML configuration file using the PyYAML library, validates specific required fields, and prints a summary report. Use a class to encapsulate the logic and include a CLI that accepts the config file path. Include argument parsing, error handling, field validation, and a usage example at the bottom. Output a single, complete, well-formatted code block. Assume the user will copy and save it directly.
[SessionDriver] Prompt submitted.
[Wait] Monitoring assistant message for stability...
[25756:21784:0414/111711.344:ERROR:registration_request.cc(291)] Registration response error message: DEPRECATED_ENDPOINT
[Wait] Timeout: Assistant response never stabilized.
[Demo] Captured HTML after prompt submission. (Truncated)
<html lang="en-US" data-build="prod-bfc932963e42e98ba999cdc94644b970e4e8ad68" dir="ltr" class="dark" style="color-scheme: dark;" foxified=""><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="preload" as="image" href="https://cdn.oaistatic.com/assets/sora-mutf8tav.webp"><link rel="preload" as="image" href="https://lh3.googleusercontent.com/a/ACg8ocK1FO6Wdk9KIZIZ97qbxBLZSKrNDaWKLhbqd2ScC3erV3ZIZndwYg=s96-c" referrerpolicy="no-referrer"><link rel="preconnect" href="https://cdn.oaistatic.com"><link rel="preconnect" href="https://ab.chatgpt.com"><meta name="robots" content="index, follow"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="apple-itunes-app" content="app-id=6448311069"><meta name="dd-trace-id" content="17307823512676829160"><meta name="dd-trace-time" content="1744651002237"><link rel="icon" href="https://cdn.oaistatic.com/assets/favicon-miwirzcw.ico" sizes="32x32"><link rel="icon" href="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='180'%20height='180'%20fill='none'%3e%3cstyle%3e%20:root%20{%20--primary-fill:%20%23000;%20--secondary-fill:%20%23fff;%20}%20@media%20(prefers-color-scheme:%20dark)%20{%20:root%20{%20--primary-fill:%20%23fff;%20--secondary-fill:%20%23000;%20}%20}%20%3c/style%3e%3cg%20clip-path='url(%23a)'%3e%3crect%20width='180'%20height='180'%20fill='var(--primary-fill)'%20rx='90'%20/%3e%3cg%20clip-path='url(%23b)'%3e%3cpath%20fill='var(--seconda

[Demo] Found 2 message bubbles.
[Bubble 1](Top of response window): Absolutely! Here’s a complete Python script that uses PyYAMLto load a configuration file, validates required fields, and prints a summary report. It includes a class-based structure, argument parsing viaargparse, robust error handling, and a usage example. You can copy and save this directly.
[Bubble 2](Bottom of response window): Let me know if you'd like to expand it to include optional fields, type checks, schema validation (e.g. using Cerberus or json schema), or even an auto-correct mode.

[Debug] Raw extracted <p>: <p class="" data-end="2934" data-start="2766">Let me know if you'd like to expand it to include optional fields, type checks, schema validation (e.g. using <code data-end="2886" data-start="2876">Cerberus</code> or <code data-end="2902" data-start="2890">json schema</code>), or even an auto-correct mode.</p>

[Demo] Latest AI Response:
Let me know if you'd like to expand it to include optional fields, type checks, schema validation (e.g. using Cerberus or json schema), or even an auto-correct mode.

[Demo] Found 1 code block(s).

[Code Block 1]:
#!/usr/bin/env python3

import argparse
import os
import sys
import yaml

class ConfigLoader:
    REQUIRED_FIELDS = ['project_name','version','author','settings']

    def__init__(self, config_path):
        self.config_path = config_path
        self.config_data =None

    defload_config(self):
       if not os.path.exists(self.config_path):
           raise FileNotFoundError(f"Configuration file not found:{self.config_path}")

       try:
          with open(self.config_path,'r')asfile:
              self.config_data = yaml.safe_load(file)
       except yaml.YAML Error as e:
           raise ValueError(f"Failed to parse YAML file:{e}")

       if not is instance(self.config_data,dict):
          raise ValueError("YAML root must be a mapping (dictionary).")

    defvalidate_config(self):
        missing = [fieldforfieldinself.REQUIRED_FIELDSiffieldnotinself.config_data]
        if missing:
            raise ValueError(f"Missing required config fields:{', '.join(missing)}")

    def print_summary(self):
        print("✅ Configuration Summary")
        print("-"*30)
        for field in self.REQUIRED_FIELDS:
            value = self.config_data.get(field)
            if isinstance(value,dict):
                print(f"{field}:")
                for k, v in value.items():
                    print(f"{k}:{v}")
            else:
                print(f"{field}:{value}")
        print("-"*30)
        print("Configuration file loaded and validated successfully.")

    def parse_arguments():
        parser = argparse.ArgumentParser(
            description='YAML Configuration Loader and Validator'
        )
        parser.add_argument(
            'config',
            metavar='config.yaml',
            type=str,
            help='Path to the YAML configuration file'
        )
        return parser.parse_args()

    def main():
        args = parse_arguments()
        loader = ConfigLoader(args.config)

        try:
            loader.load_config()
            loader.validate_config()
            loader.print_summary()
        except Exception as e:
            print(f"❌ Error:{e}")
            sys.exit(1)

if__name__ =='__main__':
    main()

"""


USAGE EXAMPLE:
--------------
Save this script as `config_validator.py` and run:

python config_validator.py path/to/config.yaml

Example YAML (`example_config.yaml`):

    project_name: Aurora Reflex
    version: 1.0
    author: Mark Bunds
    settings:
      reflex_enabled: true
      gui_mode: full
"""
[SessionDriver] Closing browser session...
[SessionDriver] Session closed.

(Python_3_13_2venv) C:\Users\MBUNDS\Documents\QtDesignStudio\AURORA>
